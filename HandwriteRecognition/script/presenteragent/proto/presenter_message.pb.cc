// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presenter_message.proto

#include "presenter_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ascend {
namespace presenter {
namespace proto {
class OpenChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenChannelRequest>
      _instance;
} _OpenChannelRequest_default_instance_;
class OpenChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenChannelResponse>
      _instance;
} _OpenChannelResponse_default_instance_;
class HeartbeatMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatMessage>
      _instance;
} _HeartbeatMessage_default_instance_;
class CoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coordinate>
      _instance;
} _Coordinate_default_instance_;
class Rectangle_AttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rectangle_Attr>
      _instance;
} _Rectangle_Attr_default_instance_;
class PresentImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PresentImageRequest>
      _instance;
} _PresentImageRequest_default_instance_;
class PresentImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PresentImageResponse>
      _instance;
} _PresentImageResponse_default_instance_;
}  // namespace proto
}  // namespace presenter
}  // namespace ascend
namespace protobuf_presenter_5fmessage_2eproto {
void InitDefaultsOpenChannelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ascend::presenter::proto::_OpenChannelRequest_default_instance_;
    new (ptr) ::ascend::presenter::proto::OpenChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::OpenChannelRequest::InitAsDefaultInstance();
}

void InitDefaultsOpenChannelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpenChannelRequestImpl);
}

void InitDefaultsOpenChannelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ascend::presenter::proto::_OpenChannelResponse_default_instance_;
    new (ptr) ::ascend::presenter::proto::OpenChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::OpenChannelResponse::InitAsDefaultInstance();
}

void InitDefaultsOpenChannelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpenChannelResponseImpl);
}

void InitDefaultsHeartbeatMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ascend::presenter::proto::_HeartbeatMessage_default_instance_;
    new (ptr) ::ascend::presenter::proto::HeartbeatMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::HeartbeatMessage::InitAsDefaultInstance();
}

void InitDefaultsHeartbeatMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartbeatMessageImpl);
}

void InitDefaultsCoordinateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ascend::presenter::proto::_Coordinate_default_instance_;
    new (ptr) ::ascend::presenter::proto::Coordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::Coordinate::InitAsDefaultInstance();
}

void InitDefaultsCoordinate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCoordinateImpl);
}

void InitDefaultsRectangle_AttrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_presenter_5fmessage_2eproto::InitDefaultsCoordinate();
  {
    void* ptr = &::ascend::presenter::proto::_Rectangle_Attr_default_instance_;
    new (ptr) ::ascend::presenter::proto::Rectangle_Attr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::Rectangle_Attr::InitAsDefaultInstance();
}

void InitDefaultsRectangle_Attr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRectangle_AttrImpl);
}

void InitDefaultsPresentImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_presenter_5fmessage_2eproto::InitDefaultsRectangle_Attr();
  {
    void* ptr = &::ascend::presenter::proto::_PresentImageRequest_default_instance_;
    new (ptr) ::ascend::presenter::proto::PresentImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::PresentImageRequest::InitAsDefaultInstance();
}

void InitDefaultsPresentImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPresentImageRequestImpl);
}

void InitDefaultsPresentImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ascend::presenter::proto::_PresentImageResponse_default_instance_;
    new (ptr) ::ascend::presenter::proto::PresentImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::PresentImageResponse::InitAsDefaultInstance();
}

void InitDefaultsPresentImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPresentImageResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, channel_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, content_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::HeartbeatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, left_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, right_bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, label_text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, rectangle_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, error_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ascend::presenter::proto::OpenChannelRequest)},
  { 7, -1, sizeof(::ascend::presenter::proto::OpenChannelResponse)},
  { 14, -1, sizeof(::ascend::presenter::proto::HeartbeatMessage)},
  { 19, -1, sizeof(::ascend::presenter::proto::Coordinate)},
  { 26, -1, sizeof(::ascend::presenter::proto::Rectangle_Attr)},
  { 34, -1, sizeof(::ascend::presenter::proto::PresentImageRequest)},
  { 44, -1, sizeof(::ascend::presenter::proto::PresentImageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_OpenChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_OpenChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_HeartbeatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_Coordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_Rectangle_Attr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_PresentImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ascend::presenter::proto::_PresentImageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "presenter_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027presenter_message.proto\022\026ascend.presen"
      "ter.proto\"l\n\022OpenChannelRequest\022\024\n\014chann"
      "el_name\030\001 \001(\t\022@\n\014content_type\030\002 \001(\0162*.as"
      "cend.presenter.proto.ChannelContentType\""
      "n\n\023OpenChannelResponse\022@\n\nerror_code\030\001 \001"
      "(\0162,.ascend.presenter.proto.OpenChannelE"
      "rrorCode\022\025\n\rerror_message\030\002 \001(\t\"\022\n\020Heart"
      "beatMessage\"\"\n\nCoordinate\022\t\n\001x\030\001 \001(\r\022\t\n\001"
      "y\030\002 \001(\r\"\224\001\n\016Rectangle_Attr\0224\n\010left_top\030\001"
      " \001(\0132\".ascend.presenter.proto.Coordinate"
      "\0228\n\014right_bottom\030\002 \001(\0132\".ascend.presente"
      "r.proto.Coordinate\022\022\n\nlabel_text\030\003 \001(\t\"\267"
      "\001\n\023PresentImageRequest\0223\n\006format\030\001 \001(\0162#"
      ".ascend.presenter.proto.ImageFormat\022\r\n\005w"
      "idth\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\022\014\n\004data\030\004 \001(\014"
      "\022>\n\016rectangle_list\030\005 \003(\0132&.ascend.presen"
      "ter.proto.Rectangle_Attr\"o\n\024PresentImage"
      "Response\022@\n\nerror_code\030\001 \001(\0162,.ascend.pr"
      "esenter.proto.PresentDataErrorCode\022\025\n\rer"
      "ror_message\030\002 \001(\t*\245\001\n\024OpenChannelErrorCo"
      "de\022\031\n\025kOpenChannelErrorNone\020\000\022\"\n\036kOpenCh"
      "annelErrorNoSuchChannel\020\001\022)\n%kOpenChanne"
      "lErrorChannelAlreadyOpened\020\002\022#\n\026kOpenCha"
      "nnelErrorOther\020\377\377\377\377\377\377\377\377\377\001*P\n\022ChannelCont"
      "entType\022\034\n\030kChannelContentTypeImage\020\000\022\034\n"
      "\030kChannelContentTypeVideo\020\001*#\n\013ImageForm"
      "at\022\024\n\020kImageFormatJpeg\020\000*\244\001\n\024PresentData"
      "ErrorCode\022\031\n\025kPresentDataErrorNone\020\000\022$\n "
      "kPresentDataErrorUnsupportedType\020\001\022&\n\"kP"
      "resentDataErrorUnsupportedFormat\020\002\022#\n\026kP"
      "resentDataErrorOther\020\377\377\377\377\377\377\377\377\377\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1239);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "presenter_message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_presenter_5fmessage_2eproto
namespace ascend {
namespace presenter {
namespace proto {
const ::google::protobuf::EnumDescriptor* OpenChannelErrorCode_descriptor() {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_presenter_5fmessage_2eproto::file_level_enum_descriptors[0];
}
bool OpenChannelErrorCode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChannelContentType_descriptor() {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_presenter_5fmessage_2eproto::file_level_enum_descriptors[1];
}
bool ChannelContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ImageFormat_descriptor() {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_presenter_5fmessage_2eproto::file_level_enum_descriptors[2];
}
bool ImageFormat_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PresentDataErrorCode_descriptor() {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_presenter_5fmessage_2eproto::file_level_enum_descriptors[3];
}
bool PresentDataErrorCode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void OpenChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenChannelRequest::kChannelNameFieldNumber;
const int OpenChannelRequest::kContentTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenChannelRequest::OpenChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsOpenChannelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.OpenChannelRequest)
}
OpenChannelRequest::OpenChannelRequest(const OpenChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_name().size() > 0) {
    channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  content_type_ = from.content_type_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.OpenChannelRequest)
}

void OpenChannelRequest::SharedCtor() {
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_ = 0;
  _cached_size_ = 0;
}

OpenChannelRequest::~OpenChannelRequest() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.OpenChannelRequest)
  SharedDtor();
}

void OpenChannelRequest::SharedDtor() {
  channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenChannelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenChannelRequest::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenChannelRequest& OpenChannelRequest::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsOpenChannelRequest();
  return *internal_default_instance();
}

OpenChannelRequest* OpenChannelRequest::New(::google::protobuf::Arena* arena) const {
  OpenChannelRequest* n = new OpenChannelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.OpenChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_ = 0;
  _internal_metadata_.Clear();
}

bool OpenChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.OpenChannelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_name().data(), static_cast<int>(this->channel_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ascend.presenter.proto.OpenChannelRequest.channel_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ascend.presenter.proto.ChannelContentType content_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_content_type(static_cast< ::ascend::presenter::proto::ChannelContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.OpenChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.OpenChannelRequest)
  return false;
#undef DO_
}

void OpenChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.OpenChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelRequest.channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel_name(), output);
  }

  // .ascend.presenter.proto.ChannelContentType content_type = 2;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->content_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.OpenChannelRequest)
}

::google::protobuf::uint8* OpenChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.OpenChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelRequest.channel_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel_name(), target);
  }

  // .ascend.presenter.proto.ChannelContentType content_type = 2;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->content_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.OpenChannelRequest)
  return target;
}

size_t OpenChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.OpenChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_name());
  }

  // .ascend.presenter.proto.ChannelContentType content_type = 2;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.OpenChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.OpenChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.OpenChannelRequest)
    MergeFrom(*source);
  }
}

void OpenChannelRequest::MergeFrom(const OpenChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.OpenChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_name().size() > 0) {

    channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
}

void OpenChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.OpenChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenChannelRequest::CopyFrom(const OpenChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.OpenChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenChannelRequest::IsInitialized() const {
  return true;
}

void OpenChannelRequest::Swap(OpenChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenChannelRequest::InternalSwap(OpenChannelRequest* other) {
  using std::swap;
  channel_name_.Swap(&other->channel_name_);
  swap(content_type_, other->content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenChannelRequest::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenChannelResponse::kErrorCodeFieldNumber;
const int OpenChannelResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenChannelResponse::OpenChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsOpenChannelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.OpenChannelResponse)
}
OpenChannelResponse::OpenChannelResponse(const OpenChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.OpenChannelResponse)
}

void OpenChannelResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

OpenChannelResponse::~OpenChannelResponse() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.OpenChannelResponse)
  SharedDtor();
}

void OpenChannelResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenChannelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenChannelResponse::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenChannelResponse& OpenChannelResponse::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsOpenChannelResponse();
  return *internal_default_instance();
}

OpenChannelResponse* OpenChannelResponse::New(::google::protobuf::Arena* arena) const {
  OpenChannelResponse* n = new OpenChannelResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.OpenChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool OpenChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.OpenChannelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::ascend::presenter::proto::OpenChannelErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ascend.presenter.proto.OpenChannelResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.OpenChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.OpenChannelResponse)
  return false;
#undef DO_
}

void OpenChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.OpenChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.OpenChannelResponse)
}

::google::protobuf::uint8* OpenChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.OpenChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.OpenChannelResponse)
  return target;
}

size_t OpenChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.OpenChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.OpenChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.OpenChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.OpenChannelResponse)
    MergeFrom(*source);
  }
}

void OpenChannelResponse::MergeFrom(const OpenChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.OpenChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void OpenChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.OpenChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenChannelResponse::CopyFrom(const OpenChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.OpenChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenChannelResponse::IsInitialized() const {
  return true;
}

void OpenChannelResponse::Swap(OpenChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenChannelResponse::InternalSwap(OpenChannelResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenChannelResponse::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatMessage::HeartbeatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsHeartbeatMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.HeartbeatMessage)
}
HeartbeatMessage::HeartbeatMessage(const HeartbeatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.HeartbeatMessage)
}

void HeartbeatMessage::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatMessage::~HeartbeatMessage() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.HeartbeatMessage)
  SharedDtor();
}

void HeartbeatMessage::SharedDtor() {
}

void HeartbeatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatMessage::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatMessage& HeartbeatMessage::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsHeartbeatMessage();
  return *internal_default_instance();
}

HeartbeatMessage* HeartbeatMessage::New(::google::protobuf::Arena* arena) const {
  HeartbeatMessage* n = new HeartbeatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.HeartbeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HeartbeatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.HeartbeatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.HeartbeatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.HeartbeatMessage)
  return false;
#undef DO_
}

void HeartbeatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.HeartbeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.HeartbeatMessage)
}

::google::protobuf::uint8* HeartbeatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.HeartbeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.HeartbeatMessage)
  return target;
}

size_t HeartbeatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.HeartbeatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.HeartbeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.HeartbeatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.HeartbeatMessage)
    MergeFrom(*source);
  }
}

void HeartbeatMessage::MergeFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.HeartbeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatMessage::CopyFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatMessage::IsInitialized() const {
  return true;
}

void HeartbeatMessage::Swap(HeartbeatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatMessage::InternalSwap(HeartbeatMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatMessage::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Coordinate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinate::kXFieldNumber;
const int Coordinate::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinate::Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsCoordinate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.Coordinate)
}
Coordinate::Coordinate(const Coordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.Coordinate)
}

void Coordinate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.Coordinate)
  SharedDtor();
}

void Coordinate::SharedDtor() {
}

void Coordinate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coordinate::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coordinate& Coordinate::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsCoordinate();
  return *internal_default_instance();
}

Coordinate* Coordinate::New(::google::protobuf::Arena* arena) const {
  Coordinate* n = new Coordinate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.Coordinate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.Coordinate)
  return false;
#undef DO_
}

void Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.Coordinate)
}

::google::protobuf::uint8* Coordinate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.Coordinate)
  return target;
}

size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.Coordinate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coordinate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {
  return true;
}

void Coordinate::Swap(Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinate::InternalSwap(Coordinate* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rectangle_Attr::InitAsDefaultInstance() {
  ::ascend::presenter::proto::_Rectangle_Attr_default_instance_._instance.get_mutable()->left_top_ = const_cast< ::ascend::presenter::proto::Coordinate*>(
      ::ascend::presenter::proto::Coordinate::internal_default_instance());
  ::ascend::presenter::proto::_Rectangle_Attr_default_instance_._instance.get_mutable()->right_bottom_ = const_cast< ::ascend::presenter::proto::Coordinate*>(
      ::ascend::presenter::proto::Coordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rectangle_Attr::kLeftTopFieldNumber;
const int Rectangle_Attr::kRightBottomFieldNumber;
const int Rectangle_Attr::kLabelTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rectangle_Attr::Rectangle_Attr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsRectangle_Attr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.Rectangle_Attr)
}
Rectangle_Attr::Rectangle_Attr(const Rectangle_Attr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_text().size() > 0) {
    label_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_text_);
  }
  if (from.has_left_top()) {
    left_top_ = new ::ascend::presenter::proto::Coordinate(*from.left_top_);
  } else {
    left_top_ = NULL;
  }
  if (from.has_right_bottom()) {
    right_bottom_ = new ::ascend::presenter::proto::Coordinate(*from.right_bottom_);
  } else {
    right_bottom_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.Rectangle_Attr)
}

void Rectangle_Attr::SharedCtor() {
  label_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_top_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_bottom_) -
      reinterpret_cast<char*>(&left_top_)) + sizeof(right_bottom_));
  _cached_size_ = 0;
}

Rectangle_Attr::~Rectangle_Attr() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.Rectangle_Attr)
  SharedDtor();
}

void Rectangle_Attr::SharedDtor() {
  label_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete left_top_;
  if (this != internal_default_instance()) delete right_bottom_;
}

void Rectangle_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rectangle_Attr::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rectangle_Attr& Rectangle_Attr::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsRectangle_Attr();
  return *internal_default_instance();
}

Rectangle_Attr* Rectangle_Attr::New(::google::protobuf::Arena* arena) const {
  Rectangle_Attr* n = new Rectangle_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rectangle_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.Rectangle_Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && left_top_ != NULL) {
    delete left_top_;
  }
  left_top_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_bottom_ != NULL) {
    delete right_bottom_;
  }
  right_bottom_ = NULL;
  _internal_metadata_.Clear();
}

bool Rectangle_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.Rectangle_Attr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ascend.presenter.proto.Coordinate left_top = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ascend.presenter.proto.Coordinate right_bottom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right_bottom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_text().data(), static_cast<int>(this->label_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ascend.presenter.proto.Rectangle_Attr.label_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.Rectangle_Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.Rectangle_Attr)
  return false;
#undef DO_
}

void Rectangle_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.Rectangle_Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.Coordinate left_top = 1;
  if (this->has_left_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->left_top_, output);
  }

  // .ascend.presenter.proto.Coordinate right_bottom = 2;
  if (this->has_right_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->right_bottom_, output);
  }

  // string label_text = 3;
  if (this->label_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_text().data(), static_cast<int>(this->label_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.Rectangle_Attr.label_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.Rectangle_Attr)
}

::google::protobuf::uint8* Rectangle_Attr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.Rectangle_Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.Coordinate left_top = 1;
  if (this->has_left_top()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->left_top_, deterministic, target);
  }

  // .ascend.presenter.proto.Coordinate right_bottom = 2;
  if (this->has_right_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->right_bottom_, deterministic, target);
  }

  // string label_text = 3;
  if (this->label_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_text().data(), static_cast<int>(this->label_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.Rectangle_Attr.label_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label_text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.Rectangle_Attr)
  return target;
}

size_t Rectangle_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.Rectangle_Attr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label_text = 3;
  if (this->label_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_text());
  }

  // .ascend.presenter.proto.Coordinate left_top = 1;
  if (this->has_left_top()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->left_top_);
  }

  // .ascend.presenter.proto.Coordinate right_bottom = 2;
  if (this->has_right_bottom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->right_bottom_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rectangle_Attr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.Rectangle_Attr)
  GOOGLE_DCHECK_NE(&from, this);
  const Rectangle_Attr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rectangle_Attr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.Rectangle_Attr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.Rectangle_Attr)
    MergeFrom(*source);
  }
}

void Rectangle_Attr::MergeFrom(const Rectangle_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.Rectangle_Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label_text().size() > 0) {

    label_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_text_);
  }
  if (from.has_left_top()) {
    mutable_left_top()->::ascend::presenter::proto::Coordinate::MergeFrom(from.left_top());
  }
  if (from.has_right_bottom()) {
    mutable_right_bottom()->::ascend::presenter::proto::Coordinate::MergeFrom(from.right_bottom());
  }
}

void Rectangle_Attr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.Rectangle_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rectangle_Attr::CopyFrom(const Rectangle_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.Rectangle_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rectangle_Attr::IsInitialized() const {
  return true;
}

void Rectangle_Attr::Swap(Rectangle_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rectangle_Attr::InternalSwap(Rectangle_Attr* other) {
  using std::swap;
  label_text_.Swap(&other->label_text_);
  swap(left_top_, other->left_top_);
  swap(right_bottom_, other->right_bottom_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rectangle_Attr::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PresentImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PresentImageRequest::kFormatFieldNumber;
const int PresentImageRequest::kWidthFieldNumber;
const int PresentImageRequest::kHeightFieldNumber;
const int PresentImageRequest::kDataFieldNumber;
const int PresentImageRequest::kRectangleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PresentImageRequest::PresentImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsPresentImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.PresentImageRequest)
}
PresentImageRequest::PresentImageRequest(const PresentImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rectangle_list_(from.rectangle_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&format_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.PresentImageRequest)
}

void PresentImageRequest::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&format_)) + sizeof(height_));
  _cached_size_ = 0;
}

PresentImageRequest::~PresentImageRequest() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.PresentImageRequest)
  SharedDtor();
}

void PresentImageRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PresentImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PresentImageRequest::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PresentImageRequest& PresentImageRequest::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsPresentImageRequest();
  return *internal_default_instance();
}

PresentImageRequest* PresentImageRequest::New(::google::protobuf::Arena* arena) const {
  PresentImageRequest* n = new PresentImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PresentImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.PresentImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rectangle_list_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&format_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool PresentImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.PresentImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ascend.presenter.proto.ImageFormat format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::ascend::presenter::proto::ImageFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rectangle_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.PresentImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.PresentImageRequest)
  return false;
#undef DO_
}

void PresentImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.PresentImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.ImageFormat format = 1;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->width(), output);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rectangle_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rectangle_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.PresentImageRequest)
}

::google::protobuf::uint8* PresentImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.PresentImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.ImageFormat format = 1;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->width(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rectangle_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->rectangle_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.PresentImageRequest)
  return target;
}

size_t PresentImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.PresentImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->rectangle_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rectangle_list(static_cast<int>(i)));
    }
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .ascend.presenter.proto.ImageFormat format = 1;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PresentImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.PresentImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresentImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PresentImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.PresentImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.PresentImageRequest)
    MergeFrom(*source);
  }
}

void PresentImageRequest::MergeFrom(const PresentImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.PresentImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rectangle_list_.MergeFrom(from.rectangle_list_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void PresentImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.PresentImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresentImageRequest::CopyFrom(const PresentImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.PresentImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresentImageRequest::IsInitialized() const {
  return true;
}

void PresentImageRequest::Swap(PresentImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PresentImageRequest::InternalSwap(PresentImageRequest* other) {
  using std::swap;
  rectangle_list_.InternalSwap(&other->rectangle_list_);
  data_.Swap(&other->data_);
  swap(format_, other->format_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PresentImageRequest::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PresentImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PresentImageResponse::kErrorCodeFieldNumber;
const int PresentImageResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PresentImageResponse::PresentImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_presenter_5fmessage_2eproto::InitDefaultsPresentImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ascend.presenter.proto.PresentImageResponse)
}
PresentImageResponse::PresentImageResponse(const PresentImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.PresentImageResponse)
}

void PresentImageResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

PresentImageResponse::~PresentImageResponse() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.PresentImageResponse)
  SharedDtor();
}

void PresentImageResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PresentImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PresentImageResponse::descriptor() {
  ::protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PresentImageResponse& PresentImageResponse::default_instance() {
  ::protobuf_presenter_5fmessage_2eproto::InitDefaultsPresentImageResponse();
  return *internal_default_instance();
}

PresentImageResponse* PresentImageResponse::New(::google::protobuf::Arena* arena) const {
  PresentImageResponse* n = new PresentImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PresentImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.PresentImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool PresentImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ascend.presenter.proto.PresentImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::ascend::presenter::proto::PresentDataErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ascend.presenter.proto.PresentImageResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ascend.presenter.proto.PresentImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ascend.presenter.proto.PresentImageResponse)
  return false;
#undef DO_
}

void PresentImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ascend.presenter.proto.PresentImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.PresentImageResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ascend.presenter.proto.PresentImageResponse)
}

::google::protobuf::uint8* PresentImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.PresentImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.PresentImageResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.PresentImageResponse)
  return target;
}

size_t PresentImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.PresentImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PresentImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.PresentImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PresentImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PresentImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.PresentImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.PresentImageResponse)
    MergeFrom(*source);
  }
}

void PresentImageResponse::MergeFrom(const PresentImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.PresentImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void PresentImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.PresentImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresentImageResponse::CopyFrom(const PresentImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.PresentImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresentImageResponse::IsInitialized() const {
  return true;
}

void PresentImageResponse::Swap(PresentImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PresentImageResponse::InternalSwap(PresentImageResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PresentImageResponse::GetMetadata() const {
  protobuf_presenter_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_presenter_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace presenter
}  // namespace ascend

// @@protoc_insertion_point(global_scope)
